{
  "Description": "GoCD Agent Cluster",

  "AWSTemplateFormatVersion": "2010-09-09",

  "Parameters" : {
    "Release":          { "Type": "String" },
    "VpcId":            { "Type": "String" },
    "ImageId":          { "Type": "String" },
    "DockerImage":      { "Type": "String" },
    "EcsAuth":          { "Type": "String", "NoEcho" : true },
    "EcsEmail":         { "Type": "String" },
    "GoServerUrl":      { "Type": "String" },
    "GithubPrivateKey": { "Type": "String", "NoEcho":  true }
  },

  "Resources": {

    "Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "eu-central-1b",
        "IamInstanceProfile": "ecsInstanceRole",
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": "t2.medium",
        "KeyName": "gocd",
        "Monitoring": "true",
        "SecurityGroupIds": [ { "Ref": "SecurityGroup" } ],
        "Tags": [
          { "Key": "Name", "Value": { "Ref": "AWS::StackName" } }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [ "",
              [
                "#!/bin/bash\n",

                "export ECS_AUTH=", { "Ref": "EcsAuth" }, "\n",
                "export ECS_EMAIL=", { "Ref": "EcsEmail" }, "\n",
                "export ECS_CLUSTER=", { "Ref": "Cluster" }, "\n",

                "cat <<EOF > /etc/ecs/ecs.config\n",
                "ECS_LOGLEVEL=debug\n",
                "ECS_CLUSTER=$ECS_CLUSTER\n",
                "ECS_ENGINE_AUTH_TYPE=dockercfg\n",
                "ECS_ENGINE_AUTH_DATA={\"https://index.docker.io/v1/\":{\"auth\":\"$ECS_AUTH\",\"email\":\"$ECS_EMAIL\"}}\n",
                "EOF",

                "cat <<EOF > /release/vm",
                { "Fn::Join": [ "=", [ "VM_RELEASE", { "Ref": "Release" } ] ] },
                "EOF"
              ]
            ]
          }
        }
      }
    },

    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Go Agent",
        "VpcId": { "Ref" : "VpcId" },
        "SecurityGroupEgress": [
          { "IpProtocol": "-1", "CidrIp": "0.0.0.0/0" }
        ]
      }
    },

    "Cluster": {
      "Type": "AWS::ECS::Cluster"
    }
  },

  "Outputs": {

    "Cluster": {
      "Description": "GoCD Agent ECS Cluster",
      "Value": { "Ref": "Cluster" },
      "Export": { "Name": { "Fn::Join": [ ":", [ { "Ref": "AWS::StackName" }, "Cluster" ] ] } }
    }
  }
}
